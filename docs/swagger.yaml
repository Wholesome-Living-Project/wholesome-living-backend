basePath: /
definitions:
  finance.createInvestmentRequest:
    properties:
      amount:
        type: integer
      description:
        type: string
      investmentTime:
        type: integer
    type: object
  finance.createInvestmentResponse:
    properties:
      id:
        type: string
    type: object
  finance.getInvestmentResponse:
    properties:
      amount:
        type: integer
      investmentTime:
        type: integer
      userId:
        type: string
    type: object
  meditation.createMeditationRequest:
    properties:
      endTime:
        type: integer
      meditationTime:
        type: integer
    type: object
  meditation.createMeditationResponse:
    properties:
      id:
        type: string
    type: object
  meditation.getMeditationResponse:
    properties:
      endTime:
        type: integer
      id:
        type: string
      meditationTime:
        type: integer
      userId:
        type: string
    type: object
  settings.FinanceSettings:
    properties:
      amountNotifications:
        type: integer
      investmentGoal:
        description: The user's investment goal.
        type: integer
      investmentTimeGoal:
        description: The user's investment time goal.
        type: integer
      notifications:
        type: boolean
      periodNotifications:
        $ref: '#/definitions/settings.enumNotificationPeriod'
      strategy:
        $ref: '#/definitions/settings.enumStrategy'
      strategyAmount:
        type: integer
    type: object
  settings.MeditationSettings:
    properties:
      amountNotifications:
        type: integer
      meditationTime:
        description: The user's meditation time goal.
        type: integer
      notifications:
        type: boolean
      periodNotifications:
        $ref: '#/definitions/settings.enumNotificationPeriod'
    type: object
  settings.createInvestmentResponse:
    properties:
      id:
        type: string
    type: object
  settings.createSettingsRequest:
    properties:
      enabledPlugins:
        description: A list with the Plugins that the user has enabled.
        items:
          type: string
        type: array
      finance:
        allOf:
        - $ref: '#/definitions/settings.FinanceSettings'
        description: The user's settings for the finance plugin.
      meditation:
        allOf:
        - $ref: '#/definitions/settings.MeditationSettings'
        description: The user's settings for the meditation plugin.
    type: object
  settings.enumNotificationPeriod:
    properties:
      day:
        type: boolean
      month:
        type: boolean
      week:
        type: boolean
    type: object
  settings.enumStrategy:
    properties:
      percent:
        type: boolean
      plus:
        type: boolean
      round:
        type: boolean
    type: object
  settings.getInvestmentResponse:
    properties:
      enabledPlugins:
        description: A list with the Plugins that the user has enabled.
        items:
          type: string
        type: array
      finance:
        allOf:
        - $ref: '#/definitions/settings.FinanceSettings'
        description: The user's settings for the finance plugin.
      meditation:
        allOf:
        - $ref: '#/definitions/settings.MeditationSettings'
        description: The user's settings for the meditation plugin.
    type: object
  user.UserDB:
    properties:
      createdAt:
        type: integer
      dateOfBirth:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      plugins:
        items:
          $ref: '#/definitions/user.pluginType'
        type: array
    type: object
  user.createUserRequest:
    properties:
      dateOfBirth:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
    type: object
  user.createUserResponse:
    properties:
      id:
        type: string
    type: object
  user.pluginType:
    enum:
    - meditation
    - workout
    type: string
    x-enum-varnames:
    - PluginTypeMeditation
    - PluginTypeWorkout
  user.updateUserRequest:
    properties:
      dateOfBirth:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      plugins:
        items:
          $ref: '#/definitions/user.pluginType'
        type: array
    type: object
info:
  contact:
    name: Wholesome Living
  description: A backend for Wholesome Living written in Golang backend API using
    Fiber and MongoDB
  license:
    name: MIT
  title: Wholesome Living Backend
  version: "0.1"
paths:
  /finance:
    get:
      description: fetch a single investment session.
      parameters:
      - description: User ID
        in: header
        name: userId
        required: true
        type: string
      - description: investment ID
        in: query
        name: id
        type: string
      - description: start time
        in: query
        name: startTime
        type: integer
      - description: end time
        in: query
        name: endTime
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/finance.getInvestmentResponse'
      summary: Get a single investment
      tags:
      - finance
    post:
      consumes:
      - '*/*'
      description: Creates a new investment.
      parameters:
      - description: User ID
        in: header
        name: userId
        required: true
        type: string
      - description: investment to create
        in: body
        name: investment
        required: true
        schema:
          $ref: '#/definitions/finance.createInvestmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/finance.createInvestmentResponse'
      summary: Create a investment.
      tags:
      - finance
  /meditation:
    get:
      description: fetch all meditation sessions of a user.
      parameters:
      - description: User ID
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              properties:
                endTime:
                  type: integer
                id:
                  type: string
                meditationTime:
                  type: integer
                userId:
                  type: string
              type: object
            type: array
      summary: Get all meditation session
      tags:
      - meditation
    post:
      consumes:
      - '*/*'
      description: Creates a new meditation.
      parameters:
      - description: Meditation to create
        in: body
        name: meditation
        required: true
        schema:
          $ref: '#/definitions/meditation.createMeditationRequest'
      - description: User ID
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meditation.createMeditationResponse'
      summary: Create meditation.
      tags:
      - meditation
  /meditation/{id}:
    get:
      description: fetch a single meditation session.
      parameters:
      - description: Meditation ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: header
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/meditation.getMeditationResponse'
      summary: Get a meditation session
      tags:
      - meditation
  /settings:
    get:
      description: fetch settings for a user.
      parameters:
      - description: User ID
        in: header
        name: userId
        required: true
        type: string
      - description: Plugin name
        in: query
        name: plugin
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settings.getInvestmentResponse'
      summary: Get settings for a user.
      tags:
      - settings
    post:
      consumes:
      - '*/*'
      description: Creates settings for a user.
      parameters:
      - description: User ID
        in: header
        name: userId
        required: true
        type: string
      - description: onboarding to create
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/settings.createSettingsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settings.createInvestmentResponse'
      summary: Create onboarding in backend, set settings.
      tags:
      - settings
  /settings/finance:
    post:
      consumes:
      - '*/*'
      description: Creates settings for a user for onr Plugin.
      parameters:
      - description: User ID
        in: header
        name: userId
        required: true
        type: string
      - description: onboarding to create
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/settings.FinanceSettings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settings.createInvestmentResponse'
      summary: Create settings for the finance plugin.
      tags:
      - settings
  /settings/meditation:
    post:
      consumes:
      - '*/*'
      description: Creates settings for a user
      parameters:
      - description: User ID
        in: header
        name: userId
        required: true
        type: string
      - description: onboarding to create
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/settings.MeditationSettings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/settings.createInvestmentResponse'
      summary: Create settings for the meditation Plugin.
      tags:
      - settings
  /users:
    get:
      consumes:
      - '*/*'
      description: fetch every user available.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.UserDB'
            type: array
      summary: Get all users.
      tags:
      - users
    post:
      consumes:
      - '*/*'
      description: creates one user.
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.createUserResponse'
      summary: Create one user.
      tags:
      - users
    put:
      consumes:
      - '*/*'
      description: update a user by id.
      parameters:
      - description: User to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.updateUserRequest'
      - description: User ID
        in: header
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserDB'
      summary: Update a user.
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - '*/*'
      description: fetch a user by id.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserDB'
      summary: Get a user.
      tags:
      - users
swagger: "2.0"
