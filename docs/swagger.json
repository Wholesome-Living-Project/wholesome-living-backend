{
    "swagger": "2.0",
    "info": {
        "description": "A backend for Wholesome Living written in Golang backend API using Fiber and MongoDB",
        "title": "Wholesome Living Backend",
        "contact": {
            "name": "Wholesome Living"
        },
        "license": {
            "name": "MIT"
        },
        "version": "0.1"
    },
    "basePath": "/",
    "paths": {
        "/users": {
            "get": {
                "description": "fetch every user available.",
                "consumes": ["*/*"],
                "produces": ["application/json"],
                "tags": ["users"],
                "summary": "Get all users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.userDB"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "creates one user.",
                "consumes": ["*/*"],
                "produces": ["application/json"],
                "tags": ["users"],
                "summary": "Create one user.",
                "parameters": [
                    {
                        "description": "User to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.createUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "user.createUserRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "user.createUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "user.userDB": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}
